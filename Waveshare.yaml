################################################################################
# Substitution Variables
################################################################################
substitutions:
  device_internal_name: waveshare_7inch
  device_wifi_name: waveshare-7inch
  friendly_name: Waveshare 7inch
  device_ip_address: 172.16.17.107
  volume_minus: "\U000F075E"
  volume_plus:  "\U000F075D"
  power:        "\U000F0425"

################################################################################
# Board Configuration
################################################################################
esphome:
  name: ${device_wifi_name}
  friendly_name: ${friendly_name}
  area: Lounge
  platformio_options:
    board_build.flash_mode: dio
    board_build.esp-idf.memory_type: qio_opi
    board_upload.maximum_ram_size: 524288
    board_build.flash_size: 8MB
    board_build.f_cpu: 160000000L

psram:
  mode: octal
  speed: 120MHz

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  flash_size: 8MB
  cpu_frequency: 240MHz # For 2025.5.1
  framework:
    type: esp-idf
    sdkconfig_options: # From: https://www.waveshare.com/wiki/ESP32-S3-Touch-LCD-7#Precautions
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESPTOOLPY_FLASHSIZE_8MB: "y"
      CONFIG_FREERTOS_HZ: "1000"
      # CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_240: y # This is handled above with 2025.5.1 with cpu_frequency.
      CONFIG_ESPTOOLPY_FLASHMODE_QIO: y
      CONFIG_ESPTOOLPY_FLASHFREQ_120M: y      # To be consistent with PSRAM
      CONFIG_SPIRAM_MODE_OCT: y
      CONFIG_IDF_EXPERIMENTAL_FEATURES: y
      CONFIG_SPIRAM_SPEED_120M: y             # Need to be consistent with FLASH
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: y
      CONFIG_COMPILER_OPTIMIZATION_PERF: y
      # The following LVGL configuration items are helpful for frame rate improvement (LVGL v8.3):
      CONFIG_LV_MEM_CUSTOM: y
      CONFIG_LV_MEMCPY_MEMSET_STD: y
      CONFIG_LV_ATTRIBUTE_FAST_MEM: y
      # We seem to son't have BOOTLOADER_FLASH_DC_AWARE - so suppress warning:
      CONFIG_SPI_FLASH_HPM_DC_DISABLE: y
    advanced:
      # Required for 120MHz PSRAM & FLASH:
      enable_idf_experimental_features: True

font:
  - file: "fonts/OpenSans-Bold.ttf"  # Adjust path if needed
    id: roboto
    size: 48
    bpp: 4
  - file: "fonts/OpenSans-Bold.ttf"
    id: roboto_50  # For time label
    size: 52
    bpp: 4
  - file: "fonts/OpenSans-Bold.ttf"
    id: roboto_20  # For date and button text
    size: 16
    bpp: 4
  - file: "fonts/OpenSans-Bold.ttf"
    id: roboto_36  # For Powerwall label, 20% smaller than roboto_50
    size: 26
    bpp: 4
    extras:
      - file: "fonts/materialdesignicons-webfont.ttf"
        glyphs: [
          "$volume_minus",
          "$volume_plus",
          "$power",
          ]



################################################################################
# WiFi
################################################################################
wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
# Leave it using DHCP now WiFi is stable
#  manual_ip: 
#    static_ip: ${device_ip_address}
#    gateway: !secret gateway_address
#    subnet: !secret subnet_address
#    dns1: !secret dns1

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_wifi_name} Hotspot"
    password: !secret wifi_ap_password
  
captive_portal:

################################################################################
# Web Server
################################################################################
web_server:
  port: 80
  version: 3
  include_internal: true

################################################################################
# OTA
################################################################################
ota:
  - platform: esphome
    password: !secret ota_pw

################################################################################
# Enable Home Assistant API
################################################################################
api:
  id: ha_api
  encryption:
    key: !secret ha_api_pw

# Time Component
time:
  - platform: homeassistant
    id: homeassistant_time
    on_time:
      - seconds: /1  # Update every 1 seconds
        then:
          - lvgl.label.update:
              id: lbl_current_time
              text: !lambda |-
                char buffer[16];
                auto now = id(homeassistant_time).now();
                snprintf(buffer, sizeof(buffer), "%02d:%02d", now.hour, now.minute);
                return buffer;
          - lvgl.label.update:
              id: lbl_current_date
              text: !lambda |-
                char buffer[32];
                auto now = id(homeassistant_time).now();
                const char* days[] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
                const char* months[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
                const char* day_name = days[now.day_of_week - 1];
                const char* month_name = months[now.month - 1];
                const char* suffix;
                if (now.day_of_month % 10 == 1 && now.day_of_month != 11) suffix = "st";
                else if (now.day_of_month % 10 == 2 && now.day_of_month != 12) suffix = "nd";
                else if (now.day_of_month % 10 == 3 && now.day_of_month != 13) suffix = "rd";
                else suffix = "th";
                snprintf(buffer, sizeof(buffer), "%s %d%s %s", day_name, now.day_of_month, suffix, month_name);
                return buffer;

################################################################################
# I2C for touchscreen
################################################################################
i2c:
  sda: GPIO08
  scl: GPIO09
  scan: true
  id: bus_a

################################################################################
# IO Extender
################################################################################
ch422g:
  - id: ch422g_hub

################################################################################
# Enable logging
################################################################################
logger:
  hardware_uart: UART0
  level: DEBUG

# Backlight Output on GPIO16
output:
  - platform: ledc
    pin: GPIO16
    id: backlight

# Backlight as a Light Entity
light:
  - platform: monochromatic
    output: backlight
    name: "Display Backlight"
    id: display_backlight
    restore_mode: ALWAYS_ON

################################################################################
# Switch
################################################################################
switch:
  - platform: template
    name: "Display Power"
    id: display_power_switch
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    turn_on_action:
      - light.turn_on:
          id: display_backlight
          brightness: 100%
    turn_off_action:
      - light.turn_off:
          id: display_backlight
  - platform: restart
    name: "Restart"
    id: device_restart
  
  - platform: safe_mode
    name: Use Safe Mode
    id: device_safe_mode

################################################################################
# Sensors
################################################################################
sensor:
  # WiFi
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: ${device_internal_name}_wifi_signal_sensor
    update_interval: 10s
  - platform: uptime
    type: seconds
    name: Uptime
    update_interval: 60s

# Colors (LCARS style with orange for time/date)
color:
  - id: lcars_beige
    hex: "E6CC99"
  - id: lcars_blue_gray
    hex: "99B3CC"
  - id: lcars_black
    hex: "000000"
  - id: lcars_white
    hex: "FFFFFF"
  - id: lcars_orange
    hex: "ff8800"
  - id: lcars_lightblue
    hex: "9cb0ff"
  - id: lcars_red
    hex: "eb4e4e"
  - id: lcars_lightorange
    hex: "ff9c00"
  - id: lcars_lavender
    hex: "cc99ff"

# Display setup (enable_pin stays on ch422g pin 2)
display:
  - platform: rpi_dpi_rgb
    id: my_display
    rotation: 90
    update_interval: never
    auto_clear_enabled: false
    color_order: RGB
    pclk_frequency: 16MHZ
    dimensions:
      width: 800
      height: 480
    de_pin:
      number: GPIO5
    hsync_pin:
      number: GPIO46
      ignore_strapping_warning: true
    vsync_pin:
      number: GPIO3
      ignore_strapping_warning: true
    pclk_pin: GPIO7
    pclk_inverted: true
    reset_pin:
      ch422g: ch422g_hub
      number: 3
    enable_pin:
      ch422g: ch422g_hub
      number: 2
    hsync_back_porch: 8
    hsync_front_porch: 8
    hsync_pulse_width: 4
    vsync_back_porch: 8
    vsync_front_porch: 8
    vsync_pulse_width: 4
    data_pins:
      red:
        - 1
        - 2
        - 42
        - 41
        - 40
      blue:
        - 14
        - 38
        - 18
        - 17
        - 10
      green:
        - 39
        - 0
        - 45
        - 48
        - 47
        - 21

# Touchscreen
touchscreen:
  platform: gt911
  id: my_touch
  interrupt_pin: GPIO4
  # update_interval: 16ms
  reset_pin:
    ch422g: ch422g_hub
    number: 1
    mode: OUTPUT
  transform:
    swap_xy: true
    mirror_x: false
    mirror_y: true
  on_touch:
    - lambda: |-
        ESP_LOGI("Touch", "Touch detected at x=%d, y=%d", touch.x, touch.y);
  on_update:
    - lambda: |-
          for (auto touch: touches)  {
              if (touch.state <= 2) {
                ESP_LOGI("Touch points:", "id=%d x=%d, y=%d x.raw=%d, y.raw=%d", touch.id, touch.x, touch.y, touch.x_raw, touch.y_raw);
              }
          }  

################################################################################
# Text Sensors
################################################################################
text_sensor:
  - platform: homeassistant
    id: lounge_sputnik_lights_state
    entity_id: light.lounge_dimmer_light_0
    on_value:
      then:
        - logger.log:
            format: "Lounge Sputnik Lights state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_lounge_sputnik_lights
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: lounge_uplights_state
    entity_id: light.lounge_uplights
    on_value:
      then:
        - logger.log:
            format: "Lounge Uplights state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_lounge_uplights
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: iplayer_state
    entity_id: media_player.lg_webos_smart_tv
    attribute: source
    on_value:
      then:
        - logger.log:
            format: "iPlayer state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_iplayer
            state:
              checked: !lambda return (0 == x.compare(std::string{"BBC iPlayer"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: kodi_state
    entity_id: media_player.lg_webos_smart_tv
    attribute: source
    on_value:
      then:
        - logger.log:
            format: "Kodi state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_kodi
            state:
              checked: !lambda return (0 == x.compare(std::string{"Game Console"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: volume_percentage
    entity_id: media_player.lounge_speakers
    attribute: volume_level
    on_value:
      then:
        - logger.log:
            format: "Volume: %s"
            args: [ 'x.c_str()' ]
        - lvgl.label.update:
            id: lbl_volume_percentage
            text: !lambda |-
              // Convert the string to a float, round to the nearest integer, and convert back to string
              float value = std::stof(x) * 100;
              int rounded_value = static_cast<int>(std::round(value));
              char buffer[32];
              snprintf(buffer, sizeof(buffer), "Volume: %d%%", rounded_value);
              return buffer;
  - platform: homeassistant
    id: lg_power_state
    entity_id: media_player.lg_webos_smart_tv
    on_value:
      then:
        - logger.log:
            format: "LG Power state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_lg_power
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: kitchen_lamp1_state
    entity_id: light.kitchen_lamp1
    on_value:
      then:
        - logger.log:
            format: "Kitchen Lamp state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_kitchen_lamp1
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));
  - platform: homeassistant
    id: kitchen_uplights_state
    entity_id: light.kitchen_uplights
    on_value:
      then:
        - logger.log:
            format: "Kitchen Uplights state: %s"
            args: [ 'x.c_str()' ]
        - lvgl.widget.update:
            id: btn_kitchen_uplights
            state:
              checked: !lambda return (0 == x.compare(std::string{"on"}));
              disabled: !lambda return ((0 == x.compare(std::string{"unavailable"})) or (0 == x.compare(std::string{"unknown"})));

# Add the image component for the new background
image:
  - file: "images/background.png"  # Relative path
    id: lcars_background
    type: RGB565  # As confirmed by your successful compile
    resize: 480x800


# LVGL setup with LCARS-inspired layout
lvgl:
  theme:
    button:
      width: 160
      height: 70
      bg_color: lcars_lightblue  # Off / Unchecked
      bg_opa: 80%
      radius: 20
      border_width: 0
      pressed:
        bg_color: lcars_lightorange
        bg_opa: 100%
      checked:
        bg_color: lcars_orange
        bg_opa: 100%
      pad_all: 0

  displays: my_display
  touchscreens: my_touch
  buffer_size: 12%
  color_depth: 16
  log_level: INFO
  pages:
    - id: main_page
      widgets:
        # Root object with the new background image
        - obj:
            x: 0
            y: 0
            width: 480
            height: 800
            bg_color: lcars_black
            bg_opa: 100%  # Fully opaque (equivalent to LV_OPA_COVER)
            border_width: 0
            border_opa: 0%  # Fully transparent border
            pad_all: 0
            radius: 0
            bg_image_src: lcars_background
            bg_image_opa: 100%  # Fully opaque background image
            bg_image_recolor_opa: 0  # No recoloring

        # Time and Date area (orange text, moved back to original left position)
        - obj:
            x: 19
            y: -10
            width: 4200
            height: 100
            bg_color: lcars_black
            bg_opa: 0  # Fully transparent (equivalent to LV_OPA_TRANSP)
            radius: 0
            border_width: 0
            border_opa: 0  # Fully transparent border
            pad_all: 0
            widgets:
              - label:
                  id: lbl_current_time
                  align: LEFT_MID
                  x: 64
                  y: 5
                  text: "00:00"
                  text_font: roboto_50
                  text_color: lcars_orange
                  height: 80
              - label:
                  id: lbl_current_date
                  align: LEFT_MID
                  x: 64
                  y: 64
                  text: "Tuesday 18th March"
                  text_font: roboto_20
                  text_color: lcars_orange
                  height: 80

        # Button grid
        - obj:
            x: 90
            y: 175
            width: 360
            height: 500  # Adjusted for new layout
            bg_opa: 0  # Fully transparent (equivalent to LV_OPA_TRANSP)
            border_width: 0
            pad_all: 0
            layout:
              type: GRID
              grid_columns: ["175px", "175px"]
              grid_rows: ["70px", "15px", "70px", "15px", "70px", "15px", "70px", "15px", "70px"]
            widgets:
              # Row 1: Lounge Sputnik Lights (left) and Lounge Uplights (right)
              - button:
                  id: btn_lounge_sputnik_lights
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "Lounge Lights button clicked!"
                      - homeassistant.action:
                          action: light.toggle
                          data:
                            entity_id: light.lounge_dimmer_light_0
                  widgets:
                    - label:
                        text: "LOUNGE SPUTNIK"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black
              - button:
                  id: btn_lounge_uplights
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "Lounge Uplights button clicked!"
                      - homeassistant.action:
                          action: light.toggle
                          data:
                            entity_id: light.lounge_uplights
                  widgets:
                    - label:
                        id: btn_lounge_uplights_text
                        text: "LOUNGE UPLIGHTS"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black

              # Row 3: VolDown (left) and Vol Up (right)
              - button:
                  id: btn_voldown
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 2
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "VolDown button clicked!"
                      - homeassistant.action:
                          action: media_player.volume_down
                          data:
                            entity_id: media_player.lounge_speakers
                  widgets:
                    - label:
                        text: "$volume_minus"
                        align: CENTER
                        text_font: roboto_36
                        text_color: lcars_black
              - button:
                  id: btn_volup
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 2
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "Vol Up button clicked!"
                      - homeassistant.action:
                          action: media_player.volume_up
                          data:
                            entity_id: media_player.lounge_speakers
                  widgets:
                    - label:
                        text: "$volume_plus"
                        align: CENTER
                        text_font: roboto_36
                        text_color: lcars_black

              # Row 5: Kodi (left) and iPlayer (right)
              - button:
                  id: btn_kodi
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 4
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "Kodi button clicked!"
                      - homeassistant.action:
                          action: media_player.turn_on
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                      - homeassistant.action:
                          action: media_player.select_source
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                            source: Game Console
                  widgets:
                    - label:
                        text: "KODI"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black
              - button:
                  id: btn_iplayer
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 4
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "iPlayer button clicked!"
                      - homeassistant.action:
                          action: media_player.turn_on
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                      - homeassistant.action:
                          action: media_player.select_source
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                            source: BBC iPlayer
                  widgets:
                    - label:
                        text: "IPLAYER"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black

              # Row 7: OK (left) and Power (right)
              - button:
                  id: btn_ok
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 6
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "OK button clicked!"
                      - homeassistant.action:
                          action: webostv.button
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                            button: ENTER
                  widgets:
                    - label:
                        text: "OK"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black
              - button:
                  id: btn_lg_power
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 6
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: STRETCH
                  on_click:
                    then:
                      - logger.log: "LG Power button clicked!"
                      - homeassistant.action:
                          action: media_player.toggle
                          data:
                            entity_id: media_player.lg_webos_smart_tv
                  widgets:
                    - label:
                        text: "$power"
                        align: CENTER
                        text_font: roboto_36
                        text_color: lcars_black

              # Row 9: Kitchen Lamp (left) and Kitchen Uplights (right)
              - button:
                  id: btn_kitchen_lamp1
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 8
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: CENTER
                  on_click:
                    then:
                      - logger.log: "Kitchen Lamp button clicked!"
                      - homeassistant.action:
                          action: light.toggle
                          data:
                            entity_id: light.kitchen_lamp1
                  widgets:
                    - label:
                        text: "KITCHEN LAMP"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black
              - button:
                  id: btn_kitchen_uplights
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 8
                  grid_cell_column_span: 1
                  grid_cell_x_align: CENTER
                  grid_cell_y_align: CENTER
                  on_click:
                    then:
                      - logger.log: "Kitchen Uplights button clicked!"
                      - homeassistant.action:
                          action: light.toggle
                          data:
                            entity_id: light.kitchen_uplights
                  widgets:
                    - label:
                        text: "KITCHEN UPLIGHTS"
                        align: CENTER
                        text_font: roboto_20
                        text_color: lcars_black

        # Volume Percentage area (orange text, bottom left black area)
        - obj:
            x: 5
            y: 730
            width: 350
            height: 62
            bg_color: lcars_black
            bg_opa: 0  # Fully transparent (equivalent to LV_OPA_TRANSP)
            radius: 0
            border_width: 0
            border_opa: 0  # Fully transparent border
            pad_all: 0
            widgets:
              - label:
                  id: lbl_volume_percentage
                  align: CENTER
                  x: 0
                  y: 0
                  text: "Volume: 0%"
                  text_font: roboto_36
                  text_color: lcars_orange
                  height: 35
